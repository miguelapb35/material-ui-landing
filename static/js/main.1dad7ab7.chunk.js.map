{"version":3,"sources":["components/Header.js","components/ImageCard.js","static/places.js","components/PlaceToVisit.js","hook/useWindowPosition.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","appbar","background","icon","color","fontSize","appbarTitle","flexGrow","appbarWrapper","width","margin","colorText","root","display","justifyContent","alignItems","height","fontFamily","title","container","textAlign","goDown","Header","classes","useState","checked","setChecked","useEffect","className","id","AppBar","elevation","Toolbar","IconButton","Collapse","in","timeout","collapsedHeight","to","smooth","maxWidth","media","fontWeight","desc","ImageCard","place","Card","CardMedia","image","imageUrl","CardContent","Typography","component","variant","description","places","process","time","minHeight","root2","PlaceToVisit","animation","setAnimation","useLayoutEffect","updatePosition","offsetHeight","window","document","getElementById","pageYOffset","addEventListener","removeEventListener","useWindowPosition","Grid","spacing","item","xs","sm","backgroundImage","backgroundRepeat","backgroundSize","CssBaseline","Boolean","location","hostname","match","ReactDOM","render","StrictMode","App","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.1dad7ab7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { AppBar, IconButton, Toolbar, Collapse } from '@material-ui/core';\r\nimport SortIcon from '@material-ui/icons/Sort'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport { Link as Scroll }  from 'react-scroll'\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appbar: {\r\n    background: 'none',\r\n  },\r\n  icon: {\r\n    color: '#fff',\r\n    fontSize: '2rem',\r\n  },\r\n  appbarTitle: {\r\n    flexGrow: '1'\r\n  },\r\n  appbarWrapper: {\r\n    width: '80%',\r\n    margin: '0 auto',\r\n  },\r\n  colorText: {\r\n    color: '#5AFF3D'\r\n  },\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n    fontFamily: 'Nunito',\r\n  },\r\n  title: {\r\n    color: '#fff',\r\n    fontSize: '4.5rem',\r\n  },\r\n  container: {\r\n    textAlign: 'center',\r\n  },\r\n  goDown: {\r\n    color: '#5AFF3D',\r\n    fontSize: '4rem'\r\n  }\r\n}));\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = useState(false);\r\n  useEffect(() => {\r\n    setChecked(true);\r\n  }, [])\r\n  return (\r\n    <div className={classes.root} id='header' >\r\n      <AppBar className={classes.appbar} elevation={0}>\r\n        <Toolbar className={classes.appbarWrapper}>\r\n          <h1 className={classes.appbarTitle}>My<span className={classes.colorText}>Island.</span></h1>\r\n          <IconButton>\r\n            <SortIcon className={classes.icon} />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Collapse in={checked} {... (checked ? { timeout: 1000 } : {} )} collapsedHeight={50} >\r\n        <div className={classes.container}>\r\n          <h1 className={classes.title}>\r\n            Welcome to <br /> My <span className={classes.colorText}>Island</span>\r\n          </h1>\r\n          <Scroll to='place-to-visit' smooth={true}>\r\n            <IconButton>\r\n              <ExpandMoreIcon className={classes.goDown} />\r\n            </IconButton>\r\n          </Scroll>\r\n        </div>\r\n      </Collapse>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { AppBar, IconButton, Toolbar, Collapse } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 645,\r\n    background: 'rgba(0,0,0,0.5)',\r\n    margin: '20px',\r\n  },\r\n  media: {\r\n    height: 440,\r\n  },\r\n  title: {\r\n    fontFamily: 'Nunito',\r\n    fontWeight: 'bold',\r\n    fontSize: '2rem',\r\n    color: '#fff'\r\n  },\r\n  desc: {\r\n    fontFamily: 'Nunito',\r\n    fontSize: '1.1rem',\r\n    color: '#ddd'    \r\n  }\r\n});\r\n\r\nexport default function ImageCard({ place, checked }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Collapse in={checked} {... (checked ? { timeout: 1000 } : {} )}>\r\n      <Card className={classes.root}>\r\n        <CardMedia\r\n            className={classes.media}\r\n            image={place.imageUrl}\r\n            title=\"My Island\"\r\n          />\r\n          <CardContent>\r\n          <Typography\r\n            component=\"h1\"\r\n            className={classes.title}\r\n          >\r\n              {place.title}\r\n            </Typography>\r\n          <Typography\r\n            variant=\"body2\"\r\n            color=\"textSecondary\"\r\n            component=\"p\"\r\n            className={classes.desc}\r\n          >\r\n              {place.description}\r\n            </Typography>\r\n          </CardContent>\r\n      </Card>\r\n    </Collapse>\r\n  );\r\n}","const places = [\r\n  {\r\n    title: 'Green',\r\n    description: \r\n      \"The Maldives are home to some of the world's mos ravishing islands\",\r\n    imageUrl: process.env.PUBLIC_URL + '/assets/island.jpg',\r\n    time: 1500,\r\n  },\r\n  {\r\n    title: 'Bora Bora',\r\n    description: \r\n      \"Shaped like a giant sombrero, this lush volcanic island stars in countles... \",\r\n    imageUrl: process.env.PUBLIC_URL + '/assets/island2.jpg',\r\n    time: 1500,\r\n  },\r\n];\r\n\r\nexport default places;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport ImageCard from './ImageCard'\r\nimport places from '../static/places'\r\nimport useWindowPosition from '../hook/useWindowPosition';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    minHeight: '100vh',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  root2: {\r\n    flexGrow: 1\r\n  }\r\n}));\r\nexport default function PlaceToVisit() {\r\n  const classes = useStyles();\r\n  const  checked =  useWindowPosition('header');\r\n  return (\r\n    <div className={classes.root} id='place-to-visit'>\r\n      <div className={classes.root2}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6}>\r\n            <ImageCard place={places[0]} checked={checked} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <ImageCard place={places[1]} checked={checked} /> \r\n          </Grid> \r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import { useLayoutEffect, useState } from 'react';\r\n\r\nexport default function useWindowPosition(id) {\r\n  const [animation, setAnimation] = useState(false);\r\n\r\n  useLayoutEffect(() => {\r\n    function updatePosition() {\r\n      const offsetHeight = window.document.getElementById(id).offsetHeight;\r\n      if (window.pageYOffset > offsetHeight * 0.7) {\r\n        setAnimation(true);\r\n      }\r\n    }\r\n    window.addEventListener('scroll', updatePosition);\r\n    updatePosition();\r\n    return () => window.removeEventListener('scroll', updatePosition);\r\n  }, [id]);\r\n  return animation;\r\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles'\nimport { CssBaseline } from '@material-ui/core';\nimport Header from './components/Header'\nimport PlaceToVisit from './components/PlaceToVisit'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minHeight: '100vh',\n    backgroundImage: `url(${process.env.PUBLIC_URL + \"/assets/bg.jpg\"})`,\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n},\n}));\nexport default function () {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <Header />\n      <PlaceToVisit />\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}